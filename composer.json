{
    "name": "guanguans/ai-commit",
    "description": "Automagically generate conventional git commit message with AI. - 使用 AI 自动生成约定式 git 提交信息。",
    "license": "MIT",
    "type": "project",
    "abandoned": false,
    "keywords": [
        "ai",
        "changelog",
        "chat",
        "chatgpt",
        "commit",
        "commit-message",
        "commitizen",
        "commitlint",
        "conventional",
        "conventional-commit",
        "diff",
        "git",
        "git-diff",
        "gpt",
        "keepachangelog",
        "bito",
        "cli",
        "copilot",
        "github",
        "gh-models",
        "gh",
        "models",
        "model",
        "ernie",
        "bot",
        "文心一言",
        "kimi",
        "moonshot",
        "openai"
    ],
    "authors": [
        {
            "name": "guanguans",
            "email": "ityaozm@gmail.com",
            "homepage": "https://www.guanguans.cn",
            "role": "developer"
        }
    ],
    "homepage": "https://github.com/guanguans/ai-commit",
    "support": {
        "issues": "https://github.com/guanguans/ai-commit/issues",
        "source": "https://github.com/guanguans/ai-commit"
    },
    "funding": [
        {
            "type": "wechat",
            "url": "https://www.guanguans.cn/images/wechat.jpeg"
        }
    ],
    "require": {
        "php": ">=8.2",
        "ext-curl": "*",
        "ext-mbstring": "*"
    },
    "require-dev": {
        "bamarni/composer-bin-plugin": "^1.8",
        "brainmaestro/composer-git-hooks": "^3.0",
        "ergebnis/composer-normalize": "^2.47",
        "guzzlehttp/guzzle": "^7.9",
        "illuminate/http": "^11.45 || ^12.0",
        "illuminate/translation": "^11.45 || ^12.0",
        "illuminate/validation": "^11.45 || ^12.0",
        "laminas/laminas-text": "^2.12",
        "laravel-zero/framework": "^11.45",
        "laravel-zero/phar-updater": "^1.4",
        "mockery/mockery": "^1.6",
        "pestphp/pest": "^3.8",
        "php-mock/php-mock-phpunit": "^2.13"
    },
    "minimum-stability": "stable",
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "App\\": "app/"
        },
        "files": [
            "app/Support/helpers.php"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "bin": [
        "builds/ai-commit"
    ],
    "config": {
        "allow-plugins": {
            "bamarni/composer-bin-plugin": true,
            "ergebnis/composer-normalize": true,
            "pestphp/pest-plugin": true
        },
        "apcu-autoloader": true,
        "classmap-authoritative": false,
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true
    },
    "extra": {
        "bamarni-bin": {
            "bin-links": true,
            "forward-command": true,
            "target-directory": "vendor-bin"
        },
        "branch-alias": {
            "dev-main": "2.x-dev"
        },
        "composer-normalize": {
            "indent-size": 4,
            "indent-style": "space"
        },
        "hooks": {
            "post-merge": [
                "composer checks"
            ],
            "pre-commit": [
                "composer checks"
            ]
        }
    },
    "scripts": {
        "post-install-cmd": [
            "@cghooks add --ignore-lock",
            "@cghooks update",
            "@composer-bin-all-update"
        ],
        "post-update-cmd": [
            "@cghooks update",
            "@composer-bin-all-update"
        ],
        "ai-commit": "@php ai-commit commit --ansi",
        "ai-commit-bito": "@ai-commit --generator=bito_cli",
        "ai-commit-bito-no-verify": "@ai-commit-bito --no-verify",
        "ai-commit-github-copilot": "@ai-commit --generator=github_copilot_cli",
        "ai-commit-github-copilot-no-verify": "@ai-commit-github-copilot --no-verify",
        "ai-commit-github-models": "@ai-commit --generator=github_models_cli",
        "ai-commit-github-models-no-verify": "@ai-commit-github-models --no-verify",
        "ai-commit-no-verify": "@ai-commit --no-verify",
        "benchmark": "@php vendor/bin/phpbench run --report=aggregate --ansi -v",
        "cghooks": "@php vendor/bin/cghooks --ansi -v",
        "cghooks-ignore": "[ ! -f \"vendor/bin/cghooks\" ] && exit 0 || php vendor/bin/cghooks --ansi -v",
        "cghooks-install": [
            "@cghooks add --ignore-lock",
            "@cghooks update"
        ],
        "cghooks-uninstall": [
            "@php -r \"file_exists('.git/hooks/pre-commit') and rename('.git/hooks/pre-commit', '.git/hooks/pre-commit.sample');\"",
            "@php -r \"file_exists('.git/hooks/post-merge') and rename('.git/hooks/post-merge', '.git/hooks/post-merge.sample');\""
        ],
        "checks": [
            "@env-put-xdebug-off",
            "@composer-normalize",
            "@composer-validate",
            "@md-lint",
            "@readme-lint",
            "@yaml-lint",
            "@phpmnd",
            "@style-lint",
            "@composer-dependency-analyser",
            "@sk-spot-lazy-traits",
            "@env-put-xdebug-on",
            "@pest",
            "@env-put-xdebug-off",
            "@rector-dry-run"
        ],
        "checks-parallel": "@composer-parallel composer-validate md-lint lint style-lint test psalm",
        "class-leak": "@php vendor/bin/class-leak --ansi -v",
        "class-leak-check": "@class-leak check config src --skip-suffix=Pipe --skip-path=Support/Traits --skip-path=Channels --skip-type=\\Guanguans\\LaravelExceptionNotify\\Contracts\\Channel --skip-type=\\Guanguans\\LaravelExceptionNotify\\Contracts\\Collector --skip-type=Rector\\Rector\\AbstractRector",
        "composer-audit": "@composer audit --ansi -v",
        "composer-bin-all-update": "@composer bin all update --ansi -v",
        "composer-check-platform-reqs": "@composer check-platform-reqs --lock --ansi -v",
        "composer-dependency-analyser": "@php vendor/bin/composer-dependency-analyser --verbose",
        "composer-diff": "@composer diff --with-platform --ansi -v",
        "composer-disable-process-timeout": "Composer\\Config::disableProcessTimeout",
        "composer-parallel": "@composer parallel --ansi -v",
        "composer-parallel-checks": "@composer-parallel composer-validate md-lint lint style-lint test psalm",
        "composer-require-checker": "@php vendor/bin/composer-require-checker check --config-file=composer-require-checker.json composer.json --ansi -v",
        "composer-require-checker-json": "@php vendor/bin/composer-require-checker check --config-file=composer-require-checker.json composer.json --ansi -v --output=json | jq",
        "composer-unused": "@php vendor/bin/composer-unused --ansi -v",
        "composer-updater": "@php composer-updater --highest-php-binary=/opt/homebrew/opt/php@8.4/bin/php --except-packages=pestphp/pest-plugin-laravel --ansi",
        "composer-updater-bin": [
            "ln -f composer-updater vendor-bin/tools/composer-updater",
            "@php vendor-bin/tools/composer-updater --highest-php-binary=/opt/homebrew/opt/php@8.4/bin/php --composer-json-path=vendor-bin/tools/composer.json --ansi -v"
        ],
        "composer-updater-dry-run": "@composer-updater --dry-run",
        "composer-updater-php-cs-fixer-config": "@composer-updater --composer-json-path=vendor-bin/php-cs-fixer-config/composer.json",
        "composer-validate": "@composer validate --check-lock --strict --ansi -v",
        "composer-vendor-patches": "@php vendor/bin/vendor-patches generate --ansi -v",
        "doctum": "@php vendor/bin/doctum.php update doctum.php --ansi -v",
        "env-put-composer-memory-unlimited": "@putenv COMPOSER_MEMORY_LIMIT=-1",
        "env-put-php": [
            "@putenv PHP73=/opt/homebrew/opt/php@7.3/bin/php",
            "@putenv PHP74=/opt/homebrew/opt/php@7.4/bin/php",
            "@putenv PHP80=/opt/homebrew/opt/php@8.0/bin/php",
            "@putenv PHP81=/opt/homebrew/opt/php@8.1/bin/php",
            "@putenv PHP82=/opt/homebrew/opt/php@8.2/bin/php",
            "@putenv PHP83=/opt/homebrew/opt/php@8.3/bin/php",
            "@putenv PHP84=/opt/homebrew/opt/php@8.4/bin/php"
        ],
        "env-put-xdebug-off": "@putenv XDEBUG_MODE=off",
        "env-put-xdebug-on": [
            "@putenv XDEBUG_MODE=coverage,debug",
            "@putenv XDEBUG_SESSION=1"
        ],
        "facade-lint": "@facade-update --lint",
        "facade-update": [
            "@env-put-php",
            "$PHP82-f vendor/bin/facade.php -- Guanguans\\\\LaravelSoar\\\\Facades\\\\Soar"
        ],
        "facades-lint": "@facades-update -- --lint",
        "facades-update": "/usr/local/opt/php@8.1/bin/php -f bin/facades.php",
        "haulable": "haulable --ansi -v",
        "haulable-package": "@haulable package builds/ai-commit",
        "infection": "@php vendor/bin/infection --test-framework=pest --show-mutations --threads=4 --ansi -v",
        "jack": "@php vendor/bin/jack --ansi -v",
        "jack-breakpoint": "@jack breakpoint",
        "jack-open-versions": "@jack open-versions",
        "jack-open-versions-dev": "@jack-open-versions --dev",
        "jack-open-versions-dev-dry-run": "@jack-open-versions-dev --dry-run",
        "jack-open-versions-dry-run": "@jack-open-versions --dry-run",
        "json-lint": "@php vendor/bin/jsonlint *.json .*rc",
        "lint": [
            "@env-put-php",
            "for DIR in .; do find $DIR -maxdepth 1 -type f -name '*.php' -type f ! -name 'xxx.php' -exec $PHP82 -l {} \\; 2>&1 | (! grep -v '^No syntax errors detected'); done",
            "for DIR in app bootstrap config resources tests; do find $DIR -type f -name '*.php' -type f ! -name 'xxx.php' -exec $PHP82 -l {} \\; 2>&1 | (! grep -v '^No syntax errors detected'); done"
        ],
        "mark-finish": "printf '\\n!\\n!\\t\\033[0;32m%s\\033[0m\\n!\\n\\n' \"Finished\"",
        "mark-separate": "printf '\\n!\\n!\\t\\033[0;33m%s\\033[0m\\n!\\n\\n' \"----------------\"",
        "mark-start": "printf '\\n!\\n!\\t\\033[0;36m%s\\033[0m\\n!\\n\\n' \"Started\"",
        "md-fix": "@md-lint --fix",
        "md-lint": "lint-md --config .lintmdrc *.md .github/ docs/",
        "neon-lint": "@php vendor/bin/neon-lint *.neon",
        "normalized": "@composer normalize --diff --ansi -v",
        "normalized-dry-run": "@normalized --dry-run",
        "peck": "/opt/homebrew/opt/php@8.3/bin/php vendor/bin/peck check --path=src/ --config=peck.json --ansi -v",
        "peck-init": "@peck --init",
        "pest": "@php vendor/bin/pest --colors=always --min=90 --coverage",
        "pest-bail": "@pest --bail",
        "pest-coverage": "@pest --coverage-html=.build/phpunit/ --coverage-clover=.build/phpunit/clover.xml",
        "pest-disable-coverage-ignore": "@pest --disable-coverage-ignore",
        "pest-highest": [
            "@env-put-php",
            "$PHP84 vendor/bin/pest --coverage"
        ],
        "pest-migrate-configuration": "@pest --migrate-configuration",
        "pest-parallel": "@pest --parallel",
        "pest-profile": "@pest --profile",
        "pest-type-coverage": "@pest --type-coverage",
        "pest-update-snapshots": "@pest -d --update-snapshots",
        "phparkitect": "@php vendor/bin/phparkitect check --ansi -v",
        "phploc": "@php vendor/bin/phploc --suffix=php src/",
        "phpmd": "@php vendor/bin/phpmd src/ ansi cleancode,codesize,controversial,design,naming,unusedcode --suffixes=php",
        "phpmetrics": "@php vendor/bin/phpmetrics --report-html=.build/phpmetrics/ src/",
        "phpmnd": "@php vendor/bin/phpmnd src --exclude-path=Support/helpers.php --ignore-numbers=2,-1 --hint --progress --ansi -v",
        "phpstan": "@php vendor/bin/phpstan analyse --ansi -v",
        "phpstan-baseline": "@phpstan --generate-baseline --allow-empty-baseline",
        "phpstan-split-baseline": [
            "@phpstan --generate-baseline=baselines/loader.neon --allow-empty-baseline",
            "find baselines/ -type f -not -name loader.neon -delete",
            "@php vendor/bin/split-phpstan-baseline baselines/loader.neon"
        ],
        "pint": [
            "@env-put-xdebug-off",
            "@php vendor/bin/pint --ansi -v"
        ],
        "pint-bail": "@pint --bail",
        "pint-dirty": "@pint --dirty",
        "pint-dirty-bail": "@pint-dirty --bail",
        "pint-dirty-test": "@pint-dirty --test",
        "pint-test": "@pint --test",
        "psalm": "@php vendor/bin/psalm",
        "psalm-baseline": "@psalm --update-baseline",
        "readme-lint": "@php readme-lint --ansi -v",
        "rector": "@php vendor/bin/rector --ansi -v",
        "rector-clear-cache": "@rector --clear-cache",
        "rector-clear-cache-dry-run": "@rector-clear-cache --dry-run",
        "rector-custom-rule": "@rector custom-rule",
        "rector-detect-node": "@rector detect-node --loop",
        "rector-dry-run": "@rector --dry-run",
        "rector-list-rules": "@rector list-rules",
        "rector-only": "@rector-clear-cache --only=Guanguans\\MonorepoBuilderWorker\\Support\\Rectors\\RenameToPsrNameRector",
        "rector-only-dry-run": "@rector-only --dry-run",
        "rector-setup-ci": "@rector setup-ci",
        "release": "@php vendor/bin/monorepo-builder release --ansi -v",
        "release-1.0.0-BETA1": "@release 1.0.0-BETA1",
        "release-1.0.0-BETA1-dry-run": "@release-1.0.0-BETA1 --dry-run",
        "release-major": "@release major",
        "release-major-dry-run": "@release-major --dry-run",
        "release-minor": "@release minor",
        "release-minor-dry-run": "@release-minor --dry-run",
        "release-patch": "@release patch",
        "release-patch-dry-run": "@release-patch --dry-run",
        "roave-infection-static-analysis-plugin": "@php vendor/bin/roave-infection-static-analysis-plugin --psalm-config=psalm.xml.dist",
        "roave-no-leaks": "@php vendor/bin/roave-no-leaks",
        "sk": "@php vendor/bin/swiss-knife --ansi -v",
        "sk-alice-yaml-fixtures-to-php": "@sk alice-yaml-fixtures-to-php --help",
        "sk-check-commented-code": "@sk check-commented-code src/ tests/ --line-limit=5",
        "sk-check-conflicts": "@sk check-conflicts src/ tests/",
        "sk-dump-editorconfig": "@sk dump-editorconfig",
        "sk-finalize-classes": "@sk finalize-classes src/ tests/",
        "sk-finalize-classes-dry-run": "@sk-finalize-classes --dry-run",
        "sk-find-multi-classes": "@sk find-multi-classes src/ tests/",
        "sk-generate-symfony-config-builders": "@sk generate-symfony-config-builders --help",
        "sk-multi-package-composer-stats": "@sk multi-package-composer-stats 'phpstan/phpstan' 'rector/rector'",
        "sk-namespace-to-psr-4": "@sk namespace-to-psr-4 src/ --namespace-root=Guanguans\\MonorepoBuilderWorker",
        "sk-pretty-json": "@sk pretty-json .lintmdrc",
        "sk-pretty-json-dry-run": "@sk-pretty-json --dry-run",
        "sk-privatize-constants": "@sk privatize-constants src/",
        "sk-search-regex": "@sk search-regex 'Guanguans.*ValetDrivers'",
        "sk-split-config-per-package": "@sk split-config-per-package monorepo-builder.php",
        "sk-spot-lazy-traits": "@sk spot-lazy-traits app/",
        "style-fix": "@php vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.php --show-progress=dots --diff --ansi -v",
        "style-lint": "@style-fix --diff --dry-run",
        "testbench": "@php vendor/bin/testbench --ansi",
        "testbench-build": "@testbench workbench:build",
        "testbench-clear": "@testbench package:purge-skeleton",
        "testbench-prepare": "@testbench package:discover",
        "testbench-serve": [
            "Composer\\Config::disableProcessTimeout",
            "@testbench-build",
            "@testbench serve"
        ],
        "testbench-test": [
            "@testbench-clear",
            "@pest"
        ],
        "text-fix": "npx textlint --fix *.md .github/*.md docs/**/*.md",
        "text-lint": "npx textlint --format=pretty-error *.md .github/*.md docs/**/*.md",
        "time-end": "@php -r 'date_default_timezone_set('\\''Asia/Shanghai'\\''); echo \"\\nTime: \".round(time() - (int) getenv('\\''START_TIME'\\'')).'\\'' seconds, Memory: '\\''.round(memory_get_peak_usage(true) / 1024 / 1024, 2).\" MB\\n\";'",
        "time-start": "@putenv START_TIME=$(date +%s);",
        "trap": "@php vendor/bin/trap --ui --ansi -v",
        "trufflehog": "trufflehog git https://github.com/guanguans/ai-commit --only-verified",
        "user-composer": [
            "@env-put-composer-memory-unlimited",
            "@env-put-xdebug-off",
            "@composer --ansi -v"
        ],
        "user-php": [
            "@env-put-xdebug-off",
            "@php -d xdebug.mode=off"
        ],
        "var-dump-server": "@php vendor/bin/var-dump-server --ansi -v",
        "vhs": [
            "@cghooks-uninstall",
            "vhs < ai-commit.tape",
            "@cghooks-install"
        ],
        "yaml-lint": "@php vendor/bin/yaml-lint .github/ --ansi -v",
        "zh-fix": "@zh-lint --fix",
        "zh-lint": "zhlint {./,docs/,docs/**/}*-zh_CN.md"
    },
    "scripts-aliases": {
        "normalized": [
            "composer-normalize"
        ],
        "normalized-dry-run": [
            "composer-normalize-dry-run"
        ],
        "pest": [
            "test"
        ],
        "pest-bail": [
            "test-bail"
        ],
        "pest-coverage": [
            "test-coverage"
        ],
        "pest-disable-coverage-ignore": [
            "test-disable-coverage-ignore"
        ],
        "pest-highest": [
            "test-highest"
        ],
        "pest-migrate-configuration": [
            "test-migrate-configuration"
        ],
        "pest-parallel": [
            "test-parallel"
        ],
        "pest-profile": [
            "test-profile"
        ],
        "pest-type-coverage": [
            "test-type-coverage"
        ],
        "pest-update-snapshots": [
            "test-update-snapshots"
        ]
    },
    "$schema": "https://getcomposer.org/schema.json"
}
